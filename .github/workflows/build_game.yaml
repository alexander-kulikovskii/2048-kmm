# This file was generated using Kotlin DSL (.github/workflows/build_game.main.kts).
# If you want to modify the workflow, please change the Kotlin file and regenerate this YAML file.
# Generated with https://github.com/krzema12/github-actions-kotlin-dsl

name: Build Game
'on':
  pull_request: {}
jobs:
  check_yaml_consistency:
    runs-on: ubuntu-latest
    steps:
    - id: step-0
      name: Check out
      uses: actions/checkout@v3
    - id: step-1
      name: Execute script
      run: rm '.github/workflows/build_game.yaml' && '.github/workflows/build_game.main.kts'
    - id: step-2
      name: Consistency check
      run: git diff --exit-code '.github/workflows/build_game.yaml'
  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    needs:
    - check_yaml_consistency
    steps:
    - id: step-0
      uses: actions/checkout@v3
    - id: step-1
      name: Setup Gradle Dependencies Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts',
          '**/gradle/wrapper/gradle-wrapper.properties') }}
    - id: step-2
      name: Setup Kotlin Native compiler
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts')
          }}
    - id: step-3
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: adopt
    - id: step-4
      name: Run Static Analysis
      run: ./gradlew detekt
  unit-tests:
    name: Debug Unit tests
    runs-on: ubuntu-latest
    needs:
    - static-analysis
    - check_yaml_consistency
    steps:
    - id: step-0
      uses: actions/checkout@v3
    - id: step-1
      name: Setup Gradle Dependencies Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts',
          '**/gradle/wrapper/gradle-wrapper.properties') }}
    - id: step-2
      name: Setup Kotlin Native compiler
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts')
          }}
    - id: step-3
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: adopt
    - id: step-4
      name: Run Debug Unit Tests
      run: ./gradlew shared:testDebug
    - id: step-5
      name: Publish results
      uses: actions/upload-artifact@v3
      with:
        name: sharedUnitTests
        path: shared/build/reports/tests/testDebugUnitTest
      if: always()
  unit-tests-design-system:
    name: Debug Unit tests for Design system
    runs-on: ubuntu-latest
    needs:
    - static-analysis
    - check_yaml_consistency
    steps:
    - id: step-0
      uses: actions/checkout@v3
    - id: step-1
      name: Setup Gradle Dependencies Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts',
          '**/gradle/wrapper/gradle-wrapper.properties') }}
    - id: step-2
      name: Setup Kotlin Native compiler
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts')
          }}
    - id: step-3
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: adopt
    - id: step-4
      name: Run Debug Unit Tests for Design system
      run: ./gradlew androidDesignSystem:verifyPaparazziDebug
    - id: step-5
      name: Publish results
      uses: actions/upload-artifact@v3
      with:
        name: designSystemUnitTests
        path: |-
          androidDesignSystem/build/reports/tests/testDebugUnitTest
          androidDesignSystem/out/failures/
      if: always()
  unit-tests-android-screens:
    name: Debug Unit tests for Android screens
    runs-on: ubuntu-latest
    needs:
    - static-analysis
    - check_yaml_consistency
    steps:
    - id: step-0
      uses: actions/checkout@v3
    - id: step-1
      name: Setup Gradle Dependencies Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts',
          '**/gradle/wrapper/gradle-wrapper.properties') }}
    - id: step-2
      name: Setup Kotlin Native compiler
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts')
          }}
    - id: step-3
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: adopt
    - id: step-4
      name: Run Debug Unit Tests for Android screens
      run: ./gradlew androidPhoneScreen:verifyPaparazziDebug
    - id: step-5
      name: Publish results
      uses: actions/upload-artifact@v3
      with:
        name: androidScreenUnitTests
        path: |-
          androidPhoneScreen/build/reports/tests/testDebugUnitTest
          androidPhoneScreen/out/failures/
      if: always()
  build-game:
    name: Build Game
    runs-on: ubuntu-latest
    needs:
    - unit-tests
    - check_yaml_consistency
    steps:
    - id: step-0
      uses: actions/checkout@v3
    - id: step-1
      name: Setup Gradle Dependencies Cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts',
          '**/gradle/wrapper/gradle-wrapper.properties') }}
    - id: step-2
      name: Setup Kotlin Native compiler
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts')
          }}
    - id: step-3
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: adopt
    - id: step-4
      name: Build android app
      run: ./gradlew androidApp:assembleDebug
